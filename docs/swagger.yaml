basePath: /
definitions:
  handler.actorId:
    properties:
      id:
        type: integer
    type: object
  handler.signInNpit:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.Actor:
    properties:
      birth_date:
        type: string
      films:
        items:
          $ref: '#/definitions/model.Film'
        type: array
      id:
        type: integer
      male:
        type: boolean
      name:
        type: string
    type: object
  model.ActorUpdate:
    properties:
      add_film_ids:
        items:
          type: integer
        type: array
      birth_date:
        type: string
      delete_film_ids:
        items:
          type: integer
        type: array
      id:
        type: integer
      male:
        type: boolean
      name:
        type: string
    type: object
  model.Film:
    properties:
      description:
        maxLength: 1000
        type: string
      id:
        type: integer
      name:
        maxLength: 150
        minLength: 1
        type: string
      rating:
        maximum: 10
        minimum: 1
        type: integer
      release_date:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Server for films and actors
  title: Filmlib API
  version: "1.0"
paths:
  /actor/all:
    get:
      consumes:
      - application/json
      description: get all actors
      operationId: get-all-actors
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Actor'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get All Actors
      tags:
      - Actors
  /actor/delete:
    delete:
      consumes:
      - application/json
      description: Delete an actor by ID
      parameters:
      - description: Actor ID to delete
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.actorId'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Delete an actor
      tags:
      - Actors
  /actor/save:
    post:
      consumes:
      - application/json
      description: Save the details of an actor
      parameters:
      - description: Actor object to be saved
        in: body
        name: actor
        required: true
        schema:
          $ref: '#/definitions/model.Actor'
      produces:
      - application/json
      responses:
        "201":
          description: Returns the ID of the saved actor
          schema:
            $ref: '#/definitions/handler.actorId'
        "400":
          description: Bad request
          schema: {}
        "500":
          description: Internal server error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Save an actor
      tags:
      - Actors
  /actor/update:
    put:
      consumes:
      - application/json
      description: Update an existing actor
      parameters:
      - description: Actor data to be updated
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.ActorUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
          schema: {}
        "500":
          description: Internal server error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Update actor
      tags:
      - Actors
  /user/auth:
    post:
      consumes:
      - application/json
      description: login
      operationId: login
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.signInNpit'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
      summary: SignIn
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
